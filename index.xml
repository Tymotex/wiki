<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ðŸª´ Tim's Dev Wiki on</title><link>https://wiki.timz.dev/</link><description>Recent content in ðŸª´ Tim's Dev Wiki on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://wiki.timz.dev/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://wiki.timz.dev/maths/discrete-maths/Set-Theory/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/maths/discrete-maths/Set-Theory/</guid><description>Sets</description></item><item><title/><link>https://wiki.timz.dev/software-engineering/aws/assets/Regions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/aws/assets/Regions/</guid><description/></item><item><title/><link>https://wiki.timz.dev/software-engineering/aws/assets/Untitled/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/aws/assets/Untitled/</guid><description/></item><item><title/><link>https://wiki.timz.dev/software-engineering/aws/Availability-Zone/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/aws/Availability-Zone/</guid><description>Availability Zones Availability zones (AZz) are basically just one or multiple physical [[Data Center|data centers]] in a [[Region|region]].
Availability zones</description></item><item><title/><link>https://wiki.timz.dev/software-engineering/aws/CloudFront/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/aws/CloudFront/</guid><description>AWS CloudFront is a CDN service to help you serve cached static and dynamic content to users with minimal latency. It&amp;rsquo;s great because you can trust in its very high availability, and it also handles things like DDoS attacks and other network attacks well.</description></item><item><title/><link>https://wiki.timz.dev/software-engineering/aws/Data-Center/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/aws/Data-Center/</guid><description>![[Data center.png]] Data centers are very large physical buildings that are dedicated to housing the computers that form the [[Cloud Computing|cloud]].</description></item><item><title/><link>https://wiki.timz.dev/software-engineering/aws/Edge-Location/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/aws/Edge-Location/</guid><description>AWS edge locations are [[Data Center|data centers]] owned by trusted 3rd party, called an AWS Partner, that uses [[CloudFront]]. Together, the edge locations form the edge network between AWS and end users.</description></item><item><title/><link>https://wiki.timz.dev/software-engineering/aws/Region/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/aws/Region/</guid><description>Regions A region is literally a geographic region which contains 1 or more [[Availability Zone|availability zones]]. AWS ensures that there are a minimum of 2 AZs in every region.</description></item><item><title/><link>https://wiki.timz.dev/software-engineering/concepts/Cloud-Computing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/Cloud-Computing/</guid><description>Cloud computing describes the usage of a network of remote computers managed by [[Cloud Provider|cloud providers]] to handle computing tasks like storing/serving files, running web servers, training machine learning models, etc.</description></item><item><title/><link>https://wiki.timz.dev/software-engineering/concepts/Cloud-Provider/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/Cloud-Provider/</guid><description>Cloud providers are just companies who have set up this big network of remote computers and give you reasonable prices for running computing tasks on their computers.</description></item><item><title/><link>https://wiki.timz.dev/software-engineering/concepts/Generators/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/Generators/</guid><description>Generators are just functions which, when invoked, will give you a single value from a list of values. They&amp;rsquo;re stateful functions which return the next value in a list of values for each successive invocation.</description></item><item><title/><link>https://wiki.timz.dev/software-engineering/concepts/IaaS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/IaaS/</guid><description/></item><item><title/><link>https://wiki.timz.dev/software-engineering/concepts/Iterators/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/Iterators/</guid><description>An iterator is an object that lets you loop through an iterable, usually by invoking, implicitly or explicitly, a next method.</description></item><item><title/><link>https://wiki.timz.dev/software-engineering/concepts/PaaS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/PaaS/</guid><description/></item><item><title/><link>https://wiki.timz.dev/software-engineering/concepts/Program-Memory/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/Program-Memory/</guid><description>Stack TODO.</description></item><item><title/><link>https://wiki.timz.dev/software-engineering/concepts/SaaS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/SaaS/</guid><description>SaaS</description></item><item><title/><link>https://wiki.timz.dev/software-engineering/concepts/Scaling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/Scaling/</guid><description/></item><item><title/><link>https://wiki.timz.dev/software-engineering/concepts/Stack-Frame/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/Stack-Frame/</guid><description>TODO.</description></item><item><title/><link>https://wiki.timz.dev/software-engineering/concepts/Type-System/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/Type-System/</guid><description>A type system is a set of rules defined by a programming language specification that assigns a type to every variable, expression, function, and possibly other things beyond those.</description></item><item><title/><link>https://wiki.timz.dev/software-engineering/frameworks/Vue.js/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/frameworks/Vue.js/</guid><description>Vue.js Vue.js is &amp;hellip;</description></item><item><title/><link>https://wiki.timz.dev/software-engineering/programming-languages/C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/programming-languages/C/</guid><description/></item><item><title/><link>https://wiki.timz.dev/software-engineering/programming-languages/CSS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/programming-languages/CSS/</guid><description/></item><item><title/><link>https://wiki.timz.dev/software-engineering/programming-languages/Java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/programming-languages/Java/</guid><description/></item><item><title/><link>https://wiki.timz.dev/software-engineering/programming-languages/JavaScript/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/programming-languages/JavaScript/</guid><description>TODO.
There&amp;rsquo;s also [[TypeScript]].
Prototypes TODO.
Rest Operator TODO.
Generators TODO.</description></item><item><title>C++</title><link>https://wiki.timz.dev/software-engineering/programming-languages/C++/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/programming-languages/C++/</guid><description/></item><item><title>Generics</title><link>https://wiki.timz.dev/software-engineering/programming-languages/Generics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/programming-languages/Generics/</guid><description>Generic programming is about writing reusable functions, classes, etc. without compromising on [[software-engineering/concepts/Type System|type safety]]. The primary motivation behind them is to keep code DRY, that is, to avoid code duplication.</description></item><item><title>Python</title><link>https://wiki.timz.dev/software-engineering/programming-languages/Python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/programming-languages/Python/</guid><description>Dunder Methods TODO.</description></item><item><title>Software Engineering</title><link>https://wiki.timz.dev/software-engineering/Software-Engineering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/Software-Engineering/</guid><description>Technologies [[software-engineering/programming-languages/TypeScript|TypeScript]]</description></item><item><title>TypeScript</title><link>https://wiki.timz.dev/software-engineering/programming-languages/TypeScript/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/programming-languages/TypeScript/</guid><description>TypeScript is a programming language made by Microsoft that is superset of [[JavaScript]]. The reason that TypeScript exists is to make complex JavaScript projects more maintainable and less error-prone by introducing a [[Type System#Static Typing|static]] and [[Type System#Strong Typing|strong]] type system.</description></item></channel></rss>