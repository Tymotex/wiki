<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tim's Dev Wiki on</title><link>https://wiki.timz.dev/</link><description>Recent content in Tim's Dev Wiki on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://wiki.timz.dev/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://wiki.timz.dev/effective-engineer/productivity/Deep-Work/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/effective-engineer/productivity/Deep-Work/</guid><description>These ideas are sourced from Cal Newport&amp;rsquo;s &amp;lsquo;Deep Work&amp;rsquo; book, my personal observations about when I am most effective in complex technical endeavours and the blogs of the world&amp;rsquo;s most effective software engineers.</description></item><item><title/><link>https://wiki.timz.dev/software-engineering/aws/assets/Regions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/aws/assets/Regions/</guid><description/></item><item><title/><link>https://wiki.timz.dev/software-engineering/aws/assets/Untitled/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/aws/assets/Untitled/</guid><description/></item><item><title/><link>https://wiki.timz.dev/software-engineering/concepts/devops/assets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/devops/assets/</guid><description/></item><item><title>Aggregate Supply and Demand</title><link>https://wiki.timz.dev/economics/macroeconomics/Aggregate-Supply-and-Demand-Model/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/Aggregate-Supply-and-Demand-Model/</guid><description>The [[economics/macroeconomics/Income-Expenditure Model|income-expenditure model]] aims to determine the short-run real GDP. The aggregate supply and demand model aims to determine the real GDP in both the short-run and long-run.</description></item><item><title>Agile</title><link>https://wiki.timz.dev/software-engineering/software-engineering/Agile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/software-engineering/Agile/</guid><description>Agile is a philosophy for project management that is particularly useful for software engineering teams. An alternative to Agile is the [[software-engineering/software-engineering/Agile#Waterfall Methodology|Waterfall approach]].</description></item><item><title>Angel Investors</title><link>https://wiki.timz.dev/finance/investment/Angel-Investors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/investment/Angel-Investors/</guid><description>Angel investors are just really rich people who are willing to lend their own money to fund a startup&amp;rsquo;s initial venture.</description></item><item><title>Arrange, Act, Assert</title><link>https://wiki.timz.dev/software-engineering/concepts/testing/Arrange-Act-Assert/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/testing/Arrange-Act-Assert/</guid><description>The &amp;lsquo;arrange, act, assert&amp;rsquo; mantra is a pattern for structuring your [[software-engineering/concepts/testing/Unit Testing|unit tests]] (as well as integration tests and e2e tests).</description></item><item><title>Asset Bubble</title><link>https://wiki.timz.dev/economics/macroeconomics/Asset-Bubble/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/Asset-Bubble/</guid><description>In finance and economic contexts, a &amp;lsquo;bubble&amp;rsquo; is when the price for a class of assets, such as real estate, grows substantially over a short period of time, but largely as a result of &amp;lsquo;irrational exuberance&amp;rsquo; and herd mentality.</description></item><item><title>Availability Zone</title><link>https://wiki.timz.dev/software-engineering/aws/Availability-Zone/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/aws/Availability-Zone/</guid><description>Availability Zones Availability zones (AZz) are basically just one or multiple physical [[software-engineering/aws/Data Center|data centers]] in a [[software-engineering/aws/Region|region]].
Availability zones</description></item><item><title>Barefoot Investor</title><link>https://wiki.timz.dev/finance/personal-finance/Barefoot-Investor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/personal-finance/Barefoot-Investor/</guid><description/></item><item><title>Bonds</title><link>https://wiki.timz.dev/economics/macroeconomics/Bonds/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/Bonds/</guid><description>A bond is an I.O.U, a formal acknowledgement about a loan and its regular payments between the lender and borrower. Bonds are a type of [[finance/investment/Securities|security]] known as debt securities and are sometimes called &amp;lsquo;fixed-income securities&amp;rsquo;.</description></item><item><title>Builder Pattern</title><link>https://wiki.timz.dev/software-engineering/concepts/design-patterns/Builder-Pattern/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/design-patterns/Builder-Pattern/</guid><description/></item><item><title>Business Cycle</title><link>https://wiki.timz.dev/economics/macroeconomics/Business-Cycle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/Business-Cycle/</guid><description>Business cycles are the observed fluctations in production.</description></item><item><title>C</title><link>https://wiki.timz.dev/software-engineering/programming-languages/C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/programming-languages/C/</guid><description/></item><item><title>C++</title><link>https://wiki.timz.dev/software-engineering/programming-languages/C++/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/programming-languages/C++/</guid><description>Pure Virtual Function Pure virtual functions are exactly the same as [[software-engineering/concepts/programming/Object Oriented Programming|abstract methods]].</description></item><item><title>Cash Rate</title><link>https://wiki.timz.dev/economics/macroeconomics/Cash-Rate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/Cash-Rate/</guid><description>The cash rate, which is set by the [[economics/macroeconomics/Central Bank|RBA]] as part of its [[economics/macroeconomics/Monetary Policy|monetary policy]], is a short-term interest rate charged on the &amp;lsquo;overnight&amp;rsquo; loans between banks.</description></item><item><title>CDNs</title><link>https://wiki.timz.dev/software-engineering/concepts/cloud/CDNs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/cloud/CDNs/</guid><description/></item><item><title>Central Bank</title><link>https://wiki.timz.dev/economics/macroeconomics/Central-Bank/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/Central-Bank/</guid><description>The central bank is a financial institution that is trusted with controlling the supply of money, implementing [[economics/macroeconomics/Monetary Policy|monetary policies]], and regulating the behaviour of [[economics/macroeconomics/Private Banks|private banks]] and other financial instutions through reserve requirements.</description></item><item><title>Charisma</title><link>https://wiki.timz.dev/effective-engineer/soft-skills/Charisma/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/effective-engineer/soft-skills/Charisma/</guid><description>First Impressions They can&amp;rsquo;t be reversed. Humility is always an excellent quality, however aim to represent yourself with an authentic level of confidence and curiosity.</description></item><item><title>CI</title><link>https://wiki.timz.dev/software-engineering/concepts/devops/CI/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/devops/CI/</guid><description/></item><item><title>Clean Code</title><link>https://wiki.timz.dev/software-engineering/concepts/clean-code/Clean-Code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/clean-code/Clean-Code/</guid><description>TODO.
Coupling Coupling describes how dependent one thing is on another. In object-oriented programming, it refers to how dependent one class is on another.</description></item><item><title>Cloud Computing</title><link>https://wiki.timz.dev/software-engineering/concepts/cloud/Cloud-Computing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/cloud/Cloud-Computing/</guid><description>Cloud computing describes the usage of a network of remote computers managed by [[software-engineering/concepts/cloud/Cloud Provider|cloud providers]] to handle computing tasks like storing/serving files, running web servers, training machine learning models, etc.</description></item><item><title>Cloud Provider</title><link>https://wiki.timz.dev/software-engineering/concepts/cloud/Cloud-Provider/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/cloud/Cloud-Provider/</guid><description>Cloud providers are just companies who have set up this big network of remote computers and give you reasonable prices for running computing tasks on their computers.</description></item><item><title>CloudFront</title><link>https://wiki.timz.dev/software-engineering/aws/CloudFront/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/aws/CloudFront/</guid><description>AWS CloudFront is a [[software-engineering/concepts/cloud/CDNs|CDN]] service to help you serve cached static and dynamic content to users with minimal latency. It&amp;rsquo;s great because you can trust in its very high availability, and it also handles things like DDoS attacks and other network attacks well.</description></item><item><title>Code Splitting</title><link>https://wiki.timz.dev/software-engineering/concepts/programming/Code-Splitting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/programming/Code-Splitting/</guid><description>TODO.</description></item><item><title>Collateral</title><link>https://wiki.timz.dev/finance/investment/Collateral/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/investment/Collateral/</guid><description>In loan agreements, collateral is an asset that the borrower has to forfeit if they default on their loan. This collateral is usually valuable and can offset the loss of the lender in the case of a defaulting borrower.</description></item><item><title>Concurrency</title><link>https://wiki.timz.dev/software-engineering/concepts/programming/Concurrency/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/programming/Concurrency/</guid><description>TODO: concurrency vs. asynchronous concurrency vs. multithreading concurrency vs. parallelism
TODO: Critical region.
Mutex Semaphore</description></item><item><title>Containers</title><link>https://wiki.timz.dev/software-engineering/concepts/devops/Containers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/devops/Containers/</guid><description>A container is a process running in its own isolated [[software-engineering/concepts/operating-systems/User Space and Kernel Space|user space]], that runs an app within.</description></item><item><title>Context Switching</title><link>https://wiki.timz.dev/effective-engineer/productivity/Context-Switching/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/effective-engineer/productivity/Context-Switching/</guid><description>Context switching is very bad.</description></item><item><title>CSS</title><link>https://wiki.timz.dev/software-engineering/programming-languages/CSS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/programming-languages/CSS/</guid><description/></item><item><title>Cypress</title><link>https://wiki.timz.dev/software-engineering/technologies/Cypress/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/technologies/Cypress/</guid><description>![[software-engineering/technologies/assets/cypress-wallpaper.png|500]]
Cypress is an [[software-engineering/concepts/testing/End To End Testing|end-to-end testing]] library for testing the entirety of a web app, including its frontend and backend, in a way that closely simulates how real users would use the app.</description></item><item><title>Data Center</title><link>https://wiki.timz.dev/software-engineering/aws/Data-Center/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/aws/Data-Center/</guid><description>![[Data center.png]] Data centers are very large physical buildings that are dedicated to housing the computers that form the [[software-engineering/concepts/cloud/Cloud Computing|cloud]].</description></item><item><title>Derivatives</title><link>https://wiki.timz.dev/finance/investment/Derivatives/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/investment/Derivatives/</guid><description>TODO.
[[finance/investment/Options|options]] and [[finance/investment/Futures|futures]].</description></item><item><title>Docker</title><link>https://wiki.timz.dev/software-engineering/technologies/Docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/technologies/Docker/</guid><description>![[software-engineering/technologies/assets/docker-wallpaper.png|800]]
Docker is a [[software-engineering/concepts/devops/Containers|containerisation]] tool, or container runtime, that packages up an app&amp;rsquo;s source code and dependencies into portable containers that can be run in many different environments.</description></item><item><title>Docker Compose</title><link>https://wiki.timz.dev/software-engineering/technologies/Docker-Compose/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/technologies/Docker-Compose/</guid><description>![[software-engineering/technologies/assets/docker-compose.png|300]]
Docker Compose is a CLI tool for running and coordinating the communication of multiple [[software-engineering/technologies/Docker|Docker]] containers. It&amp;rsquo;s a container orchestrator, like [[software-engineering/technologies/Kubernetes|Kubernetes]].</description></item><item><title>Edge Location</title><link>https://wiki.timz.dev/software-engineering/aws/Edge-Location/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/aws/Edge-Location/</guid><description>AWS edge locations are [[software-engineering/aws/Data Center|data centers]] owned by trusted 3rd party, called an AWS Partner, that uses [[software-engineering/aws/CloudFront|CloudFront]]. Together, the edge locations form the edge network between AWS and end users.</description></item><item><title>Effective Engineer</title><link>https://wiki.timz.dev/effective-engineer/Effective-Engineer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/effective-engineer/Effective-Engineer/</guid><description>Some enlightening non-technical ideas I&amp;rsquo;ve come across and expanded upon which have helped me be a more effective engineer.
Soft Skills Soft skills encompass communication skills, teamwork skills, work ethic and just having a growth mindset and seeing your interactions with others as a non-zero sum game.</description></item><item><title>Efficient Market Hypothesis</title><link>https://wiki.timz.dev/finance/investment/Efficient-Market-Hypothesis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/investment/Efficient-Market-Hypothesis/</guid><description>The Efficient Market Hypothesis is a theory that asserts that share prices always factor in all information, meaning they&amp;rsquo;re always traded at their fair value, making it impossible for investors to &amp;lsquo;beat the market&amp;rsquo; indefinitely.</description></item><item><title>End To End Testing</title><link>https://wiki.timz.dev/software-engineering/concepts/testing/End-To-End-Testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/testing/End-To-End-Testing/</guid><description>End-to-end (e2e) tests are tests that aim to simulate the user experience as closely as possible and will look almost like manual testing, but automated.</description></item><item><title>Entrepreneurship</title><link>https://wiki.timz.dev/effective-engineer/entrepreneurship/Entrepreneurship/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/effective-engineer/entrepreneurship/Entrepreneurship/</guid><description>Some scattered ideas about entrepreneurship, sourced from books:
Complete Software Developer&amp;rsquo;s Career Guide by John Sonmez. So Good They Can&amp;rsquo;t Ignore You by Cal Newport.</description></item><item><title>Exchange Rate</title><link>https://wiki.timz.dev/economics/macroeconomics/Exchange-Rate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/Exchange-Rate/</guid><description>The exchange rate is the pricing of one country&amp;rsquo;s currency relative to other currencies.
Bilateral nominal exchange rate is rate at which two countries can exchange their currencies.</description></item><item><title>Exchange Traded Funds</title><link>https://wiki.timz.dev/finance/investment/Exchange-Traded-Funds/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/investment/Exchange-Traded-Funds/</guid><description>Exchange traded funds (ETFs) are a subclass of [[finance/investment/Mutual Funds|mutual funds]] that are very similar to [[finance/investment/Index Funds|index funds]], with the main difference being that you can buy/sell shares whenever the stock market is open as opposed to only once a day.</description></item><item><title>Externalities</title><link>https://wiki.timz.dev/economics/microeconomics/Externalities/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/microeconomics/Externalities/</guid><description/></item><item><title>Extreme Programming</title><link>https://wiki.timz.dev/software-engineering/software-engineering/Extreme-Programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/software-engineering/Extreme-Programming/</guid><description>TODO.</description></item><item><title>Factory Pattern</title><link>https://wiki.timz.dev/software-engineering/concepts/design-patterns/Factory-Pattern/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/design-patterns/Factory-Pattern/</guid><description>The Factory pattern aims to give you a way to make objects&amp;hellip; TODO.</description></item><item><title>Finance</title><link>https://wiki.timz.dev/finance/Finance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/Finance/</guid><description>Finance is the study of money and assets and the management of them.
What&amp;rsquo;s the difference between finance and economics?</description></item><item><title>Fiscal Policy</title><link>https://wiki.timz.dev/economics/macroeconomics/Fiscal-Policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/Fiscal-Policy/</guid><description>Fiscal policies are the policies around the usage of government income and expenditure in an effort to positively affect macroeconomic variables like [[economics/macroeconomics/Inflation|inflation]], [[economics/macroeconomics/Labour Market|unemployment rate]], etc.</description></item><item><title>Functional Programming</title><link>https://wiki.timz.dev/software-engineering/concepts/programming/Functional-Programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/programming/Functional-Programming/</guid><description>TODO.
A [[software-engineering/concepts/programming/Programming Paradigm|programming paradigm]]</description></item><item><title>Futures</title><link>https://wiki.timz.dev/finance/investment/Futures/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/investment/Futures/</guid><description/></item><item><title>GDP</title><link>https://wiki.timz.dev/economics/macroeconomics/GDP/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/GDP/</guid><description>GDP (gross domestic product) is the monetary value of all the domestically-produced final goods and services in a country during a given period.</description></item><item><title>Generators</title><link>https://wiki.timz.dev/software-engineering/concepts/programming/Generators/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/programming/Generators/</guid><description>Generators are just functions which, when invoked, will give you a single value from a list of values. They&amp;rsquo;re stateful functions which return the next value in a list of values for each successive invocation.</description></item><item><title>Generics</title><link>https://wiki.timz.dev/software-engineering/programming-languages/Generics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/programming-languages/Generics/</guid><description>Generic programming is about writing reusable functions, classes, etc. without compromising on [[software-engineering/concepts/programming/Type System|type safety]]. The primary motivation behind them is to keep code DRY, that is, to avoid code duplication.</description></item><item><title>GoogleTest</title><link>https://wiki.timz.dev/software-engineering/technologies/GoogleTest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/technologies/GoogleTest/</guid><description>TODO.</description></item><item><title>Hedge Fund</title><link>https://wiki.timz.dev/finance/investment/Hedge-Fund/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/investment/Hedge-Fund/</guid><description>Hedge funds are [[finance/investment/Investing#Active vs Passive Investing|actively managed]] services that pool together money from a bunch of investors and then use certain investment strategies to achieve high returns and will distribute a share of the profit to the clients.</description></item><item><title>Hypervisor</title><link>https://wiki.timz.dev/software-engineering/concepts/devops/Hypervisor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/devops/Hypervisor/</guid><description>A hypervisor, in most contexts, is the software that creates and runs [[software-engineering/concepts/devops/Virtual Machines|virtual machines]]. VMWare is an example of a hypervisor that you might use for running a different OS on a personal work computer (eg.</description></item><item><title>IaaS</title><link>https://wiki.timz.dev/software-engineering/concepts/cloud/IaaS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/cloud/IaaS/</guid><description/></item><item><title>Income-Expenditure Model</title><link>https://wiki.timz.dev/economics/macroeconomics/Income-Expenditure-Model/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/Income-Expenditure-Model/</guid><description>The income-expenditure model of GDP, also called the Keynesian model since it was pioneered by Keynes, is a model that asserts that the real GDP at equilibrium is entirely determined by the desired level of aggregate expenditure on domestically-produced final goods &amp;amp; services by all people, households, firms, foreigners and the government.</description></item><item><title>Index Funds</title><link>https://wiki.timz.dev/finance/investment/Index-Funds/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/investment/Index-Funds/</guid><description>Index funds are a subclass of [[finance/investment/Mutual Funds|mutual funds]] that are [[finance/investment/Investing#Active vs Passive Investing|passively managed]] instead of [[finance/investment/Investing#Active vs Passive Investing|actively managed]].</description></item><item><title>Inflation</title><link>https://wiki.timz.dev/economics/macroeconomics/Inflation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/Inflation/</guid><description>Inflation describes a period where prices in an economy are increasing, or alternatively, the decline of the purchasing power of a country’s currency.</description></item><item><title>Insurance</title><link>https://wiki.timz.dev/finance/personal-finance/Insurance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/personal-finance/Insurance/</guid><description>Insurance is a means of guaranteeing that you will be compensated a substantial amount of money in recovery of an event like damage to an asset (property, vehicle, etc), illness, injury, death, etc.</description></item><item><title>Integration Testing</title><link>https://wiki.timz.dev/software-engineering/concepts/testing/Integration-Testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/testing/Integration-Testing/</guid><description>Integration tests, also called &amp;rsquo;end-to-end&amp;rsquo; tests, are&amp;hellip; TODO.</description></item><item><title>Interest</title><link>https://wiki.timz.dev/economics/macroeconomics/Interest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/Interest/</guid><description>Interest is the cost of borrowing money. Borrowing money enables you to acquire goods and services you that will produce value.</description></item><item><title>International Trade</title><link>https://wiki.timz.dev/economics/macroeconomics/International-Trade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/International-Trade/</guid><description>Balance of Payments The balance of payments is a recod of transactions between residents and foreigners. It consists of the current account and the capital and financial account</description></item><item><title>Investing</title><link>https://wiki.timz.dev/finance/investment/Investing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/investment/Investing/</guid><description>An investment is the purchase of an asset or commodity with the expectation of it producing income for you or appreciating in value.</description></item><item><title>Iterators</title><link>https://wiki.timz.dev/software-engineering/concepts/programming/Iterators/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/programming/Iterators/</guid><description>An iterator is an object that lets you loop through an iterable, usually by invoking, implicitly or explicitly, a next method.</description></item><item><title>Java</title><link>https://wiki.timz.dev/software-engineering/programming-languages/Java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/programming-languages/Java/</guid><description/></item><item><title>JavaScript</title><link>https://wiki.timz.dev/software-engineering/programming-languages/JavaScript/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/programming-languages/JavaScript/</guid><description>TODO.
There&amp;rsquo;s also [[software-engineering/programming-languages/TypeScript]].
Rest Operator TODO.
Generators TODO.
Object Oriented Programming Classes TODO.
Inheritance TODO.
Prototypes TODO.
Modules First, a brief timeline of JavaScript&amp;rsquo;s weird module system development:</description></item><item><title>Jest</title><link>https://wiki.timz.dev/software-engineering/technologies/Jest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/technologies/Jest/</guid><description>TODO.</description></item><item><title>Kanban</title><link>https://wiki.timz.dev/software-engineering/software-engineering/Kanban/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/software-engineering/Kanban/</guid><description>TODO.</description></item><item><title>Kernel</title><link>https://wiki.timz.dev/software-engineering/concepts/operating-systems/Kernel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/operating-systems/Kernel/</guid><description>The kernel is the part of the OS that is closer to hardware and provides abstractions such as system calls, memory management, process management, device driving, etc.</description></item><item><title>Kubernetes</title><link>https://wiki.timz.dev/software-engineering/technologies/Kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/technologies/Kubernetes/</guid><description>![[software-engineering/technologies/assets/kubernetes-wallpaper.png|700]]
Kubernetes is an open-source container orchestrator, ie. a system for automating the deployment and [[software-engineering/concepts/cloud/Scaling|scaling]] of [[software-engineering/concepts/devops/Containers|containers]]. The rise in popularity of microservice architectures gave rise to the need for container orchestration tools because microservices often need to be containerised.</description></item><item><title>Labour Market</title><link>https://wiki.timz.dev/economics/macroeconomics/Labour-Market/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/Labour-Market/</guid><description>The labour market, also called the job market, is the market for the supply of skills and time from employees and demand from businesses to hire those people.</description></item><item><title>Leadership</title><link>https://wiki.timz.dev/effective-engineer/soft-skills/Leadership/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/effective-engineer/soft-skills/Leadership/</guid><description>Ideas sourced primarily from &amp;lsquo;Extreme Ownership&amp;rsquo; by Jocko Willink.
Lead By Example Good leaders always lead by example and do themselves what they ask from their team.</description></item><item><title>Leverage</title><link>https://wiki.timz.dev/finance/investment/Leverage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/investment/Leverage/</guid><description>TODO.</description></item><item><title>Liquidity</title><link>https://wiki.timz.dev/economics/macroeconomics/Liquidity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/Liquidity/</guid><description>TODO.</description></item><item><title>Load Balancer</title><link>https://wiki.timz.dev/software-engineering/concepts/devops/Load-Balancer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/devops/Load-Balancer/</guid><description/></item><item><title>Macroeconomics</title><link>https://wiki.timz.dev/economics/Macroeconomics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/Macroeconomics/</guid><description>![[economics/assets/macroeconomics-wallpaper.png|600]]
An economy is simply the sum of all transactions that make it up. Economic growth is driven by transactions, ie.</description></item><item><title>Market</title><link>https://wiki.timz.dev/economics/microeconomics/Market/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/microeconomics/Market/</guid><description>A market consists of all the buyers and sellers making transactions for a specific class of good or service. For instance, there is a wheat market, stock market, [[economics/macroeconomics/Labour Market|labour market]], even dating market&amp;hellip; and so on.</description></item><item><title>Market Index</title><link>https://wiki.timz.dev/finance/investment/Market-Index/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/investment/Market-Index/</guid><description>https://www.investopedia.com/terms/m/marketindex.asp
A market index is a value published by a financial data company that&amp;rsquo;s meant to broadly capture the value of some section of a market.</description></item><item><title>Marketing</title><link>https://wiki.timz.dev/effective-engineer/entrepreneurship/Marketing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/effective-engineer/entrepreneurship/Marketing/</guid><description/></item><item><title>Mentorship</title><link>https://wiki.timz.dev/effective-engineer/soft-skills/Mentorship/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/effective-engineer/soft-skills/Mentorship/</guid><description>Selflessness Always show your willingness to help your peers, even to the extent of putting them before yourself. It is much better to build a reputation as a selfless, giving person that aggressively pushes themselves and everyone else up instead of only themselves.</description></item><item><title>Microeconomics</title><link>https://wiki.timz.dev/economics/Microeconomics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/Microeconomics/</guid><description>==Hello world==</description></item><item><title>Microservice</title><link>https://wiki.timz.dev/software-engineering/concepts/architecture/Microservice/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/architecture/Microservice/</guid><description>Microservice architecture aims split off an application&amp;rsquo;s set of functionalities into [[software-engineering/concepts/cloud/SaaS|services]] that run inside [[software-engineering/concepts/devops/Containers|containers]].
Microservice architectures try to solve scaling challenges faced by [[software-engineering/concepts/architecture/Monolith|monolithic]] applications.</description></item><item><title>Monetary Policy</title><link>https://wiki.timz.dev/economics/macroeconomics/Monetary-Policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/Monetary-Policy/</guid><description>Monetary policy is a modification of the [[economics/macroeconomics/Monetary Policy#Money Supply|supply of money]] by the [[economics/macroeconomics/Central Bank|Central bank]], usually in an effort to reduce [[economics/macroeconomics/Inflation|inflation]], [[economics/macroeconomics/Interest|interest rates]] or some other macroeconomic variable, to ensure the stability of a country’s currency, minimal unemployment rate, and general welfare of citizens.</description></item><item><title>Money</title><link>https://wiki.timz.dev/economics/macroeconomics/Money/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/Money/</guid><description>Fundamentally, money is a:
Medium of exchange — an asset that makes trading efficient by eliminating the inefficiencies of bartering, a form of trading where two parties exchange goods and relies on mutual desire of the others’ goods, called a double coincidence of wants.</description></item><item><title>Monolith</title><link>https://wiki.timz.dev/software-engineering/concepts/architecture/Monolith/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/architecture/Monolith/</guid><description>In monolithic architectures, every part of the application is developed and shipped as a tightly coupled whole.</description></item><item><title>Mutual Funds</title><link>https://wiki.timz.dev/finance/investment/Mutual-Funds/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/investment/Mutual-Funds/</guid><description>Mutual funds are a managed investment service that collects together the money of many investors like you to purchase a specific set of [[finance/investment/Securities|securities]].</description></item><item><title>Negotiation</title><link>https://wiki.timz.dev/effective-engineer/soft-skills/Negotiation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/effective-engineer/soft-skills/Negotiation/</guid><description>The consensus seems to be to always negotiate.
Ideas sourced from &amp;lsquo;Never Split the Difference&amp;rsquo; by Chris Voss.</description></item><item><title>Networking</title><link>https://wiki.timz.dev/effective-engineer/soft-skills/Networking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/effective-engineer/soft-skills/Networking/</guid><description>Networking Misconceptions Networking, the act of deliberately developing professional contacts, must be done with the intent of giving as many people what they want as possible.</description></item><item><title>Next.js</title><link>https://wiki.timz.dev/software-engineering/technologies/Next/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/technologies/Next/</guid><description/></item><item><title>NGINX</title><link>https://wiki.timz.dev/software-engineering/technologies/NGINX/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/technologies/NGINX/</guid><description>LetsEncrypt Sysadmin Renew SSL certificates:
1 sudo certbot --nginx -d example.com -d www.example.com</description></item><item><title>Node.js</title><link>https://wiki.timz.dev/software-engineering/programming-languages/Node.js/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/programming-languages/Node.js/</guid><description>TODO.
Filesystem APIs Note: In Node.js, the convention is generally for functions like fs.readFile, fs.appendFile, etc. to take in a callback as their last argument which has the signature (error, data) =&amp;gt; {.</description></item><item><title>Nuxt.js</title><link>https://wiki.timz.dev/software-engineering/technologies/Nuxt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/technologies/Nuxt/</guid><description>![[software-engineering/technologies/assets/Nuxt.js-logo.png|300]]
Nuxt.js is a production-ready Vue.js framework that also provides excellent developer experience. It&amp;rsquo;s inspired by [[software-engineering/technologies/Next|Next.js]], hence the naming, and exists for a similar purpose as Next.</description></item><item><title>Object Oriented Programming</title><link>https://wiki.timz.dev/software-engineering/concepts/programming/Object-Oriented-Programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/programming/Object-Oriented-Programming/</guid><description>Object-oriented programming is a [[software-engineering/concepts/programming/Programming Paradigm|programming paradigm]] that sees programs as a collection of objects interacting with each other. Objects are just containers for some data (called &amp;lsquo;fields&amp;rsquo;) and functions (called &amp;lsquo;methods&amp;rsquo;).</description></item><item><title>Opportunity Cost</title><link>https://wiki.timz.dev/economics/microeconomics/Opportunity-Cost/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/microeconomics/Opportunity-Cost/</guid><description>TODO.</description></item><item><title>Options</title><link>https://wiki.timz.dev/finance/investment/Options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/investment/Options/</guid><description/></item><item><title>Output Gap</title><link>https://wiki.timz.dev/economics/macroeconomics/Output-Gap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/Output-Gap/</guid><description/></item><item><title>PaaS</title><link>https://wiki.timz.dev/software-engineering/concepts/cloud/PaaS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/cloud/PaaS/</guid><description/></item><item><title>Performance Reviews</title><link>https://wiki.timz.dev/effective-engineer/soft-skills/Performance-Reviews/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/effective-engineer/soft-skills/Performance-Reviews/</guid><description>Performance reviews are bullshit, but you must play the game to win.
Schedule Regular Reviews You must have regular one-on-one discussion with your manager/boss about your performance.</description></item><item><title>Personal Brand</title><link>https://wiki.timz.dev/effective-engineer/soft-skills/Personal-Brand/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/effective-engineer/soft-skills/Personal-Brand/</guid><description>Unfortunately, to have impact in this world requires you to build reputation and understanding how to influence people. To do all this, you need to build up a personal brand.</description></item><item><title>Portfolio</title><link>https://wiki.timz.dev/finance/investment/Portfolio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/investment/Portfolio/</guid><description>An investment portfolio is just a set of assets, typically [[finance/investment/Securities|securities]] like [[finance/investment/Stocks|stocks]] and [[economics/macroeconomics/Bonds|bonds]], and cash, but it can also include real estate, commodities, etc.</description></item><item><title>Private Banks</title><link>https://wiki.timz.dev/economics/macroeconomics/Private-Banks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/Private-Banks/</guid><description>Private banks are financial intermediaries that make household savings available for borrowing.
When you make a deposit of physical currency to a bank, you are converting physical currency into an increase in the number representing the the value of your bank account.</description></item><item><title>Program Memory</title><link>https://wiki.timz.dev/software-engineering/concepts/computer-science/Program-Memory/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/computer-science/Program-Memory/</guid><description>Stack TODO.</description></item><item><title>Programming Paradigms</title><link>https://wiki.timz.dev/software-engineering/concepts/programming/Programming-Paradigm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/programming/Programming-Paradigm/</guid><description>A programming paradigm describes a general strategy for how to write software. Formally, a &amp;lsquo;paradigm&amp;rsquo; in everyday English is:
A set of assumptions, concepts, values, and practices that constitutes a way of viewing reality for the community that shares them.</description></item><item><title>Public Debt</title><link>https://wiki.timz.dev/economics/macroeconomics/Public-Debt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/Public-Debt/</guid><description>Public debt, also called government debt or national debt, is the financial liabilities of the government. Since raising taxes is not always reasonable, nearly all governments have to borrow money from the [[economics/macroeconomics/Sectors|private sector]] to meet their expenses.</description></item><item><title>Python</title><link>https://wiki.timz.dev/software-engineering/programming-languages/Python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/programming-languages/Python/</guid><description>Dunder Methods TODO.
Virtual Environments 1 python3 -m venv ./venv # Create a virtual environment Basic python installation</description></item><item><title>Quantity Theory</title><link>https://wiki.timz.dev/economics/macroeconomics/Quantity-Theory/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/Quantity-Theory/</guid><description>The quantity theory of money asserts that the price of goods and services is proportional to the money supply in the economy, assuming everything else is held constant.</description></item><item><title>React</title><link>https://wiki.timz.dev/software-engineering/technologies/React/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/technologies/React/</guid><description>TODO.</description></item><item><title>Real Estate Investment Trust</title><link>https://wiki.timz.dev/finance/investment/Real-Estate-Investment-Trusts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/investment/Real-Estate-Investment-Trusts/</guid><description>Note: [[finance/personal-finance/Barefoot Investor|Barefoot Investor]] encourages you to consider REITs as an alternative investment choice to buying an investment property.</description></item><item><title>Redux</title><link>https://wiki.timz.dev/software-engineering/technologies/Redux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/technologies/Redux/</guid><description>Reducers TODO.</description></item><item><title>Region</title><link>https://wiki.timz.dev/software-engineering/aws/Region/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/aws/Region/</guid><description>Regions A region is literally a geographic region which contains 1 or more [[software-engineering/aws/Availability Zone|availability zones]]. AWS ensures that there are a minimum of 2 AZs in every region.</description></item><item><title>Requirements Engineering</title><link>https://wiki.timz.dev/software-engineering/software-engineering/Requirements-Engineering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/software-engineering/Requirements-Engineering/</guid><description>Software Requirement Specification (SRS) A software requirement specification is a document, written for engineers and stakeholders alike, that describes what the project&amp;rsquo;s features are and its business model.</description></item><item><title>Routine</title><link>https://wiki.timz.dev/lifestyle/Routine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/lifestyle/Routine/</guid><description/></item><item><title>SaaS</title><link>https://wiki.timz.dev/software-engineering/concepts/cloud/SaaS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/cloud/SaaS/</guid><description>SaaS</description></item><item><title>Sales</title><link>https://wiki.timz.dev/effective-engineer/entrepreneurship/Sales/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/effective-engineer/entrepreneurship/Sales/</guid><description/></item><item><title>Savings and Investments</title><link>https://wiki.timz.dev/economics/macroeconomics/Savings-and-Investments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/Savings-and-Investments/</guid><description>Investment An investment, in macroeconomics, is the act of purchasing new capital goods, ie. as an input to bolster productivity.</description></item><item><title>Scaling</title><link>https://wiki.timz.dev/software-engineering/concepts/cloud/Scaling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/cloud/Scaling/</guid><description/></item><item><title>Scrum</title><link>https://wiki.timz.dev/software-engineering/software-engineering/Scrum/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/software-engineering/Scrum/</guid><description>TODO.
Scrum Roles A Scrum team&amp;rsquo;s member each adopts a role:
Product owner Understanding customer requirements Creates the vision for what the product should be Maintains the backlog Scrum master The middleman between product owner and dev team Assists task breakdown and planning Ensures completion of tasks Scrum team — the developers Breaks down epic to stories/tasks, then into subtasks Implements features and writes tests</description></item><item><title>Sectors</title><link>https://wiki.timz.dev/economics/macroeconomics/Sectors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/macroeconomics/Sectors/</guid><description>Sectors are partitions of the economy that contain similar business activities. They might produce similar goods or services such as mining or farming.</description></item><item><title>Securities</title><link>https://wiki.timz.dev/finance/investment/Securities/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/investment/Securities/</guid><description>A security is a tradable financial asset. They exist as a way for businesses and goverments to acquire money to fund their ventures and operations.</description></item><item><title>Server-Side Rendering</title><link>https://wiki.timz.dev/software-engineering/concepts/full-stack-dev/Server-Side-Rendering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/full-stack-dev/Server-Side-Rendering/</guid><description>TODO.</description></item><item><title>Set Theory</title><link>https://wiki.timz.dev/maths/discrete-maths/Set-Theory/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/maths/discrete-maths/Set-Theory/</guid><description>Sets</description></item><item><title>Soft Skills</title><link>https://wiki.timz.dev/effective-engineer/soft-skills/Conflict/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/effective-engineer/soft-skills/Conflict/</guid><description>Ideas sourced from &amp;lsquo;How to Win Friends and Influence People&amp;rsquo; by Dale Carnegie and &amp;lsquo;The Complete Software Developer&amp;rsquo;s Career Guide&amp;rsquo; by John Sonmez.</description></item><item><title>Software Engineering</title><link>https://wiki.timz.dev/software-engineering/Software-Engineering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/Software-Engineering/</guid><description>Software engineering is the set of theory and practices around how to write, reason about, and maintain software.
Below is a list of notes written in my exploration of software technologies and computer science concepts.</description></item><item><title>SPAs</title><link>https://wiki.timz.dev/software-engineering/concepts/full-stack-dev/SPAs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/full-stack-dev/SPAs/</guid><description>TODO.</description></item><item><title>SQL</title><link>https://wiki.timz.dev/software-engineering/programming-languages/SQL/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/programming-languages/SQL/</guid><description>TODO.</description></item><item><title>Stack Frame</title><link>https://wiki.timz.dev/software-engineering/concepts/computer-science/Stack-Frame/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/computer-science/Stack-Frame/</guid><description>TODO.</description></item><item><title>State Management</title><link>https://wiki.timz.dev/software-engineering/concepts/full-stack-dev/State-Management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/full-stack-dev/State-Management/</guid><description>State, in this context, is just the read/write data that a UI project like a React app needs. State management is about avoiding making a mess of this data when you have a complex component hierarchy with some distantly related components that need to read/modify the same part of state.</description></item><item><title>Static Site Generation</title><link>https://wiki.timz.dev/software-engineering/concepts/full-stack-dev/Static-Site-Generation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/full-stack-dev/Static-Site-Generation/</guid><description>TODO.</description></item><item><title>Stock Market</title><link>https://wiki.timz.dev/finance/investment/Stock-Market/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/investment/Stock-Market/</guid><description>The stock market is the greatest opportunity machine ever created.
The stock market, also called the share market, is the buy/sell [[economics/microeconomics/Market|market]] for [[finance/investment/Stocks|stocks]].</description></item><item><title>Stocks</title><link>https://wiki.timz.dev/finance/investment/Stocks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/investment/Stocks/</guid><description>Stocks represent pieces of official ownership, called &amp;lsquo;ownership equity&amp;rsquo;, of a business.
Stocks are traded in the [[finance/investment/Stock Market|stock market]].</description></item><item><title>Superannuation</title><link>https://wiki.timz.dev/finance/personal-finance/Superannuation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/personal-finance/Superannuation/</guid><description>Superannuation is a government policy that forces your employer to skim ~10% (the Super Guarantee rate) off your salary and deposits it to your super fund.</description></item><item><title>Supply and Demand</title><link>https://wiki.timz.dev/economics/microeconomics/Supply-and-Demand/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/economics/microeconomics/Supply-and-Demand/</guid><description/></item><item><title>Tailwind</title><link>https://wiki.timz.dev/software-engineering/technologies/Tailwind/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/technologies/Tailwind/</guid><description>![[software-engineering/technologies/assets/tailwind-wallpaper.png|700]]
With Tailwind, you style elements by applying a bunch of pre-written utility classes, minimising the amount of [[software-engineering/programming-languages/CSS|CSS]] you have to write and maintain.</description></item><item><title>Tax Return</title><link>https://wiki.timz.dev/finance/personal-finance/Tax-Return/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/personal-finance/Tax-Return/</guid><description>A tax return is a document that reports your income (from work, interest on bank accounts, investments, etc.) and expenses. You file tax returns annually in Australia, and doing so is called ‘lodging’ your tax return.</description></item><item><title>Terraform</title><link>https://wiki.timz.dev/software-engineering/technologies/Terraform/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/technologies/Terraform/</guid><description>![[software-engineering/technologies/assets/terraform.png|700]]
Terraform is an infrastructure as code technology that you can use to automate your infrastructure setup. All you do is define the things you want to spin up in a .</description></item><item><title>Tree Shaking</title><link>https://wiki.timz.dev/software-engineering/concepts/full-stack-dev/Tree-Shaking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/full-stack-dev/Tree-Shaking/</guid><description/></item><item><title>Type System</title><link>https://wiki.timz.dev/software-engineering/concepts/programming/Type-System/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/programming/Type-System/</guid><description>A type system is a set of rules defined by a programming language specification that assigns a type to every variable, expression, function, and possibly other things beyond those.</description></item><item><title>TypeScript</title><link>https://wiki.timz.dev/software-engineering/programming-languages/TypeScript/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/programming-languages/TypeScript/</guid><description>![[software-engineering/programming-languages/assets/javascript-wallpaper.png|600]]
TypeScript is a programming language made by Microsoft that is superset of [[software-engineering/programming-languages/JavaScript|JavaScript]]. The reason that TypeScript exists is to make complex JavaScript projects more maintainable and less error-prone by introducing a [[software-engineering/concepts/programming/Type System#Static Typing|static]] and [[software-engineering/concepts/programming/Type System#Strong Typing|strong]] type system.</description></item><item><title>Unit Testing</title><link>https://wiki.timz.dev/software-engineering/concepts/testing/Unit-Testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/testing/Unit-Testing/</guid><description>TODO.</description></item><item><title>User Space &amp; Kernel Space</title><link>https://wiki.timz.dev/software-engineering/concepts/operating-systems/User-Space-and-Kernel-Space/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/operating-systems/User-Space-and-Kernel-Space/</guid><description>Most operating systems will divide the computer&amp;rsquo;s [[software-engineering/concepts/operating-systems/Virtual Memory|virtual memory]] into two parts: the user space (or userland) and the kernel space.</description></item><item><title>Venture Capital</title><link>https://wiki.timz.dev/finance/investment/Venture-Capital/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/finance/investment/Venture-Capital/</guid><description>TODO. venture capital and angel investors.</description></item><item><title>Virtual Machines</title><link>https://wiki.timz.dev/software-engineering/concepts/devops/Virtual-Machines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/devops/Virtual-Machines/</guid><description>System Virtual Machine &amp;ldquo;A &amp;lsquo;virtual machine&amp;rsquo; was originally defined by Popek and Goldberg as &amp;lsquo;an efficient, isolated duplicate of a real computer machine.</description></item><item><title>Virtual Memory</title><link>https://wiki.timz.dev/software-engineering/concepts/operating-systems/Virtual-Memory/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/operating-systems/Virtual-Memory/</guid><description/></item><item><title>VPC</title><link>https://wiki.timz.dev/software-engineering/concepts/devops/VPC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/concepts/devops/VPC/</guid><description>Virtual private cloud. TODO.</description></item><item><title>Vue.js</title><link>https://wiki.timz.dev/software-engineering/technologies/Vue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/software-engineering/technologies/Vue/</guid><description>![[software-engineering/technologies/assets/vue-wallpaper.png|600]]
Vue.js is a [[software-engineering/programming-languages/JavaScript|JavaScript]] framework for building sophisticated UI components in a reusable, maintainable and performant way. Just like for React, there&amp;rsquo;s a rich ecosystem of npm packages you can plug in to have things like: unit testing, static site generation, client-side routing, state management, etc.</description></item><item><title>Work-Life Balance</title><link>https://wiki.timz.dev/effective-engineer/passion/Work-Life-Balance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/effective-engineer/passion/Work-Life-Balance/</guid><description>This is a heavily opinionated topic. People have deeply conflicting beliefs of how concretely one should segregate &amp;lsquo;work&amp;rsquo; and &amp;rsquo;life&amp;rsquo;.</description></item><item><title>Workflow</title><link>https://wiki.timz.dev/lifestyle/Workflow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wiki.timz.dev/lifestyle/Workflow/</guid><description/></item></channel></rss>